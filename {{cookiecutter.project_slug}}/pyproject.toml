[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.project_version}}"
description = "{{cookiecutter.project_description}}"
{% if cookiecutter.author_name and cookiecutter.author_email %}
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]
{% else %}
authors = []
{% endif %}
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
uvicorn = {version = "0.30.6", extras = ["standard"]}
fastapi = "0.112.1"

[tool.poetry.dev-dependencies]
coverage = "7.6.1"
httpx = "0.27.0"
pre-commit = "3.8.0"
pytest = "8.3.2"
pytest-cov = "5.0.0"
requests = "2.32.3"
ruff = "0.6.1"

[tool.ruff]
exclude = [".venv"]

[tool.ruff.lint]
select = [
    "F", # Pyflakes
    "E", # pycodestyle
    "W", # pycodestyle
    "I", # isort
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ASYNC", # flake8-async
    "RUF",  # Ruff-specific rules
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"


# https://docs.pytest.org/en/latest/reference/customize.html
[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
